using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;                                         //Gerekli kütüphaneler
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp2
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Button1_Click(object sender, EventArgs e)
        {
            // kontrol bölümü
            if (string.IsNullOrWhiteSpace(textBox1.Text))  //eğer textbox1.text boş veya sadece boşluk varsa aşağıdaki komutları gerçekleştir
            {
                MessageBox.Show("A anahtarını boş bırakamazsınız.");
                return; //başa dön
            }

            if (string.IsNullOrWhiteSpace(textBox2.Text))
            {
                MessageBox.Show("B anahtarını boş bırakamazsınız.");
                return;
            }

            if (string.IsNullOrWhiteSpace(textBox3.Text))
            {
                MessageBox.Show("Metini boş bırakamazsınız.");
                return;
            }

            int sayimi;
            if (!int.TryParse(textBox1.Text, out sayimi))  //eğer textbox1.text e  bi şekilde sayı harici birşey girmeyi başarırsanız diye
            {
                MessageBox.Show("A anahtarı sadece sayılardan oluşabilir.");
                return;
            }

            if (!int.TryParse(textBox2.Text, out sayimi))
            {
                MessageBox.Show("B anahtarı sadece sayılardan oluşabilir.");
                return;
            }

            // kontrol bölümü biter

            string[] alfabe = new string[] //TÜRKÇE ALFABE dizi tanımladım
            { "A", "B", "C", "Ç", "D", "E", "F", "G", "Ğ", "H", "I", "İ", "J", "K", "L", "M", "N", "O", "Ö", "P", "R", "S", "Ş", "T", "U", "Ü", "V", "Y", "Z" };
            try
            {
                string metin = textBox3.Text;
                int a = int.Parse(textBox1.Text); //String türündeki değerleri sayı türündeki değerlere çevirmekte kullanılır.
                int b = int.Parse(textBox2.Text); //String türündeki değerleri sayı türündeki değerlere çevirmekte kullanılır.  int.parse
                int x = 0;
                int Ey = 0;
                string smetin = "";
                metin = metin.ToUpper(); //metni BÜYÜK HARF yap

                for (int i = 0; i < metin.Length; i++) //sıfırdan metin uzunluğuna kadar 1 artır
                {
                    string pmetin = metin.Substring(i, 1); //metinden 1 eleman al

                    //noktalama işaretlerini harfe çevirerek değer atıyorum burda
                    if (pmetin == "?") pmetin = "A"; if (pmetin == "!") pmetin = "B"; if (pmetin == "'") pmetin = "C";
                    if (pmetin == ">") pmetin = "Ç"; if (pmetin == ".") pmetin = "D"; if (pmetin == ",") pmetin = "E";
                    if (pmetin == "|") pmetin = "F"; if (pmetin == "£") pmetin = "G"; if (pmetin == "$") pmetin = "Ğ";
                    if (pmetin == ";") pmetin = "H"; if (pmetin == "%") pmetin = "I"; if (pmetin == "&") pmetin = "İ";
                    if (pmetin == "/") pmetin = "J"; if (pmetin == "(") pmetin = "K"; if (pmetin == ")") pmetin = "L";
                    if (pmetin == "=") pmetin = "M"; if (pmetin == "_") pmetin = "N"; if (pmetin == "*") pmetin = "O";
                    if (pmetin == "^") pmetin = "Ö"; if (pmetin == "^^") pmetin = "P"; if (pmetin == "-") pmetin = "R";
                    if (pmetin == "<") pmetin = "Ş"; if (pmetin == "{") pmetin = "T"; if (pmetin == "}") pmetin = "U";
                    if (pmetin == "[") pmetin = "Ü"; if (pmetin == "]") pmetin = "V";
                    if (pmetin == "+") pmetin = "Y";
                    // if (pmetin == "\") pmetin = "Y"; 
                    // if (pmetin == "") pmetin = "Z";
                    //değer atama bitişi...

                    for (int j = 0; j < alfabe.Length; j++) //sıfırdan dizinin uzunluğuna kadar 1 artır  
                        //yani 0'dan 29 a kadar 1arttırıyor
                    {
                        if (pmetin == alfabe[j]) //eleman dizide varsa döngüden çık
                        { break; } //döngünün bu komutun görüldüğü yerde bitirilerek döngünün dışına çıkılması için kullanılır.
                        else 
                        { x++; } //yoksa dizideki yerini bulmak için 1 artır
                    }
                    if (pmetin == " ") //eğer metinin içerinde boşluk varsa
                    {
                        smetin += " "; //şifreli metine ekle ama boşluğu şifreleme
                        x = 0; //dizideki yerini sıfırla
                    }
                    else if (char.Parse(pmetin) >= 48 && char.Parse(pmetin) <= 57) //ASCI kod tablosunda 0-9 arasındaki rakamlar
                    {
                        smetin += pmetin; //şifrelemeye dahil etmeden ekle
                        x = 0; //dizideki yerini sıfırla
                    }
                    else //yoksa kaldığı yerden devam et
                    {
                        Ey = (a * x + b) % 29; //y=ax+b formülüne göre modunu alarak şifrele
                        x = 0; //dizideki yerini sıfırla
                        smetin += alfabe[Ey]; //ve dizideki yerini bul değişkene at
                    }
                }
                textBox4.Text = smetin; //oluşan şifreli metni yazdır
            }
            catch (Exception) //tüm oluşabilecek hataları yakala
            {
                MessageBox.Show("Hata");
            }
        }

        private void Button2_Click(object sender, EventArgs e)
        {   // deşifre etme kısmı 
            // kontrol bölümü
            if (string.IsNullOrWhiteSpace(textBox1.Text))
            {
                MessageBox.Show("A anahtarını boş bırakamazsınız.");
                return; //başa dön
            }

            if (string.IsNullOrWhiteSpace(textBox2.Text))
            {
                MessageBox.Show("B anahtarını boş bırakamazsınız.");
                return;
            }

            if (string.IsNullOrWhiteSpace(textBox3.Text))
            {
                MessageBox.Show("Metini boş bırakamazsınız.");
                return;
            }

            int sayimi;
            if (!int.TryParse(textBox1.Text, out sayimi))
            {
                MessageBox.Show("A anahtarı sadece sayılardan oluşabilir.");
                return;
            }

            if (!int.TryParse(textBox2.Text, out sayimi))
            {
                MessageBox.Show("B anahtarı sadece sayılardan oluşabilir.");
                return;
            }
            // kontrol bölümü biter
            string[] alfabe = new string[] //TÜRKÇE alfabe
            { "A", "B", "C", "Ç", "D", "E", "F", "G", "Ğ", "H", "I", "İ", "J", "K", "L", "M", "N", "O", "Ö", "P", "R", "S", "Ş", "T", "U", "Ü", "V", "Y", "Z" };
            try
            {
                string metin = textBox3.Text;
                int a = int.Parse(textBox1.Text);
                int b = int.Parse(textBox2.Text);
                int x = 0, mters = 0;
                int Dy = 0;
                string cmetin = "";
                metin = metin.ToUpper(); //metni BÜYÜK HARF yap

                for (int i = 0; i < metin.Length; i++) //sıfırdan metin uzunluğuna kadar 1 artır
                {
                    string pmetin = metin.Substring(i, 1); //metinden 1 eleman al

                    for (int j = 0; j < alfabe.Length; j++) //sıfırdan dizinin uzunluğuna kadar 1 artır
                    {
                        if (pmetin == alfabe[j]) //eleman dizide varsa döngüden çık
                        { break; }
                        else //yoksa dizideki yerini bulmak için 1 artır
                        { x++; }
                    }
                    if (pmetin == " ") //eğer metinin içerinde boşluk varsa
                    {
                        cmetin += " "; //şifreli metine ekle ama boşluğu şifreleme
                        x = 0;
                    }
                    else if (char.Parse(pmetin) >= 48 && char.Parse(pmetin) <= 57) //ASCI kod tablosunda 0-9 arasındaki rakamlar
                    {
                        cmetin += pmetin; //şifrelemeye dahil etmeden ekle
                        x = 0; //dizideki yerini sıfırla
                    }
                    else //yoksa kaldığı yerden devam et
                    {
                        for (int modters = 1; modters < 27; modters++) //modüler ters alma işlemi 3^-1 mod 29
                        {
                            if ((a * modters) % 29 == 1) //kalan eğer 1'e eşitse o sayının modüler tersi modters değişkenindeki elemandır
                            {
                                mters = modters;
                                break; //döngünün bu komutun görüldüğü yerde bitirilerek döngünün dışına çıkılması için kullanılır.
                            }
                        }
                        if (mters != 0) //modüler tersi varsa işleme devam et
                        {
                            if (x - b < 0) x += 29; //x-b sıfırdan küçük ise x'e 29 (mod 29 olduğu için) ekle
                            Dy = (mters * (x - b)) % 29; //y=a^-1*(x-b) formülüne göre modunu alarak şifre çöz
                            x = 0; //dizideki yerini sıfırla
                            cmetin += alfabe[Dy]; //ve dizideki yerini bul değişkene at
                        }
                        else if (mters == 0) //modüler tersi sıfıra eşitse mesaj ver ve döngüden çık
                        {
                            MessageBox.Show("a anahtarının modüler tersi olmadığı için çözme işlemi gerçekleştirilemiyor!\nBu yüzden a anahtarı tek sayı olmalıdır.", "Modüler Ters");
                            break;  //döngünün bu komutun görüldüğü yerde bitirilerek döngünün dışına çıkılması için kullanılır.
                        }
                    }
                }
                textBox5.Text = cmetin; //oluşan şifreli metni yazdır
            }
            catch (Exception) //tüm oluşabilecek hataları yakala
            {
                MessageBox.Show("Hatalı Veri Girişi");  //tanımlamadığım bir hata oluşması durumunda verilecek hata
            }
        }

        private void LinkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            System.Diagnostics.Process.Start("http://www.instagram.com/orcunn_ozer");      //işlemi başlat link varsıyılan tarayıcıda linki açıyor
        }


        private void Timer1_Tick(object sender, EventArgs e)
        {
            if (textBox3.Text == "0003291989") textBox4.Text = "Orçun Özer";    //rfid sistemi için bu sunumda yok
            else
                return;
        }

        private void LinkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)  //linklabele tıklanırsa
        {
            textBox1.Text = "";   //textboxları boş hale getir
            textBox2.Text = "";
            textBox3.Text = "";
            textBox4.Text = "";
            textBox5.Text = "";
        }

        private void groupBox3_Enter(object sender, EventArgs e)
        {

        }

        private void timer2_Tick(object sender, EventArgs e)
        {
            int sayimi;
            if (!int.TryParse(textBox1.Text, out sayimi))  //eğer rakam dışı birşey textbox1'e yazılmaya çalışıyor ise textbox1'i boş kutu haline getir  text ""
            {
                textBox1.Text = "";

            }
            else
                label10.Text = "";

            if (!int.TryParse(textBox2.Text, out sayimi))
            {
                textBox2.Text = "";
            }
            else
                label11.Text = "";
        }

        private void TextBox3_TextChanged(object sender, EventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }
    }
}


//Affine Şifreleme ve deşifre etme uygulaması orçun özer TOROS ÜNİVERSİTESİ SİBER GÜVENLİK DERS ÖDEVİ
