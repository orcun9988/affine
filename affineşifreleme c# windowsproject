//github linki: https://github.com/orcun9988/affine


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;                                         //Gerekli kütüphaneler
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp2
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Button1_Click(object sender, EventArgs e)
        {
            // kontrol bölümü
            if (string.IsNullOrWhiteSpace(textBox1.Text))  //eğer textbox1.text boş veya sadece boşluk varsa aşağıdaki komutları gerçekleştir
            {
                MessageBox.Show("A anahtarını boş bırakamazsınız.");  //mesaj kutusu çıkart
                return; //başa dön
            }

            if (string.IsNullOrWhiteSpace(textBox2.Text))
            {
                MessageBox.Show("B anahtarını boş bırakamazsınız.");
                return;
            }

            if (string.IsNullOrWhiteSpace(textBox3.Text))
            {
                MessageBox.Show("Metini boş bırakamazsınız.");
                return;
            }

            int sayimi;
            if (!int.TryParse(textBox1.Text, out sayimi))  //eğer textbox1.text e  bi şekilde sayı harici birşey girmeyi başarırsanız diye
            {
                MessageBox.Show("A anahtarı sadece sayılardan oluşabilir.");
                return;
            }

            if (!int.TryParse(textBox2.Text, out sayimi))
            {
                MessageBox.Show("B anahtarı sadece sayılardan oluşabilir.");
                return;
            }

            // kontrol bölümü biter

            string[] alfabetr = new string[] //TÜRKÇE ALFABE dizi tanımladım
            { "A", "B", "C", "Ç", "D", "E", "F", "G", "Ğ", "H", "I", "İ", "J", "K", "L", "M", "N", "O", "Ö", "P", "R", "S", "Ş", "T", "U", "Ü", "V", "Y", "Z" };
            try
            {
                string sifrele = textBox3.Text;  //sifrele adlı string değişkenini textbox3'teki texte eşit tutttum.
                int a = int.Parse(textBox1.Text); //String türündeki değerleri sayı türündeki değerlere çevirmekte kullanılır.
                int b = int.Parse(textBox2.Text); //String türündeki değerleri sayı türündeki değerlere çevirmekte kullanılır.  int.parse
                int x = 0; //x adında int değeri 0 
                int modhesap = 0;
                string sifrelimetin = ""; //sifrelimetin adında string değeri boş ""
                sifrele = sifrele.ToUpper(); //textbox3'e girilen değerleri büyük harf yap

                for (int i = 0; i < sifrele.Length; i++) //0'dan başlayıp girilen metinin uzunluğuna kadar 1'er arttır
                {
                    string sifrelenecek = sifrele.Substring(i, 1); //

                    //noktalama işaretlerini harfe çevirerek değer atıyorum burda
                    if (sifrelenecek == "?") sifrelenecek = "A"; if (sifrelenecek == "!") sifrelenecek = "B"; if (sifrelenecek == "'") sifrelenecek = "C";
                    if (sifrelenecek == ">") sifrelenecek = "Ç"; if (sifrelenecek == ".") sifrelenecek = "D"; if (sifrelenecek == ",") sifrelenecek = "E";
                    if (sifrelenecek == "|") sifrelenecek = "F"; if (sifrelenecek == "£") sifrelenecek = "G"; if (sifrelenecek == "$") sifrelenecek = "Ğ";
                    if (sifrelenecek == ";") sifrelenecek = "H"; if (sifrelenecek == "%") sifrelenecek = "I"; if (sifrelenecek == "&") sifrelenecek = "İ";
                    if (sifrelenecek == "/") sifrelenecek = "J"; if (sifrelenecek == "(") sifrelenecek = "K"; if (sifrelenecek == ")") sifrelenecek = "L";
                    if (sifrelenecek == "=") sifrelenecek = "M"; if (sifrelenecek == "_") sifrelenecek = "N"; if (sifrelenecek == "*") sifrelenecek = "O";
                    if (sifrelenecek == "^") sifrelenecek = "Ö"; if (sifrelenecek == "^^") sifrelenecek = "P"; if (sifrelenecek == "-") sifrelenecek = "R";
                    if (sifrelenecek == "<") sifrelenecek = "Ş"; if (sifrelenecek == "{") sifrelenecek = "T"; if (sifrelenecek == "}") sifrelenecek = "U";
                    if (sifrelenecek == "[") sifrelenecek = "Ü"; if (sifrelenecek == "]") sifrelenecek = "V";
                    if (sifrelenecek == "+") sifrelenecek = "Y";
                    // if (sifrelenecek == "\") sifrelenecek = "Y"; 
                    // if (sifrelenecek == "") sifrelenecek = "Z";
                    //değer atama bitişi...

                    for (int j = 0; j < alfabetr.Length; j++) //0'dan başlayarak dizinin uzunluğuna 1'er arttır.
                        //yani 0'dan 29 a kadar 1arttırıyor
                    {
                        if (sifrelenecek == alfabetr[j]) //eğer textbox3teki eleman alfabetr dizisinde varsa döngüden çık
                        { break; } // break komutu döngünün bu komutun görüldüğü yerde bitirilerek döngünün dışına çıkılması için kullanılır.
                        else 
                        { x++; } //eleman eğer dizide yoksa dizideki yerini bulabilmek için 1'arttır.
                    }
                    if (sifrelenecek == " ") //eğer textbox3'teki metinde boşluk bırakılırsa
                        {
                            sifrelimetin += " "; //textbox3'e ekle ama boşluğu şifreleme  
                            x = 0; //dizideki yerini sıfırla   BİLİNMEYEN BİRŞEY GİRİLDİĞİNDE DİZİDEKİ YERİNİ 0 YANİ (A HARFİ) olarak kabul edicek 
                        }
                        else if (char.Parse(sifrelenecek) >= 48 && char.Parse(sifrelenecek) <= 57) //ASCİ TABLOSUNDA 48-57 ARALĞI = 0-9 ARALIĞI
                        {
                            //şifreleme döngüsüne sokmadan eklicek
                            sifrelimetin += sifrelenecek; //örnek ? işareti girildiğinde  şifreleme algoritmasana sokmadan yukarda tanımladığım ?  = A daki ? yerine A yı metine eklicek.
                            x = 0; //dizideki yerini sıfırla
                        }
                    else //şifreleme kısmı başlıyor affine algoritması
                    {
                       modhesap = (a * x + b) % 29; //y=ax+b formülüne göre modunu alarak şifrele  % 29 yazan 29modunu al neden 29 tanımladığım dizi 29 elemanlı (TÜRKÇE ALFABE 29 elemanlı)
                        x = 0; //dizideki yerini sıfırla
                        sifrelimetin += alfabetr[modhesap]; //dizideki yerini bul değişkene koy
                    }
                }
                textBox4.Text = sifrelimetin; //oluşan şifreli metini  textbox4'e eşitleyerek yazdır
            }
            catch (Exception) //Olası bir hata durumunda
            {
                MessageBox.Show("Hata"); //hata mesajı 
            }
        }





        //
        //
        //
        //
        //
        //
        //
        //
        //BURDAN SONRASI DECOMPILE KISMINA GIRIYOR DERSTE ANLATMAM GEREKMEZ DİYE BOŞLUK BIRAKTIM ZATEN YUKARDAKILERDEN FARKLI BIRŞEY YOK İŞLEMLER TERSTEN GİDİYOR

        private void Button2_Click(object sender, EventArgs e)
        {   // deşifre etme kısmı 
            // kontrol bölümü
            if (string.IsNullOrWhiteSpace(textBox1.Text)) //textbox1.text boş veya sadece boşluk varsa
            {
                MessageBox.Show("A anahtarını boş bırakamazsınız."); //hata mesajı
                return; //başa dön
            }

            if (string.IsNullOrWhiteSpace(textBox2.Text)) //textbox2.text boş veya sadece boşluk varsa
            {
                MessageBox.Show("B anahtarını boş bırakamazsınız."); //hata mesajı
                return;
            }

            if (string.IsNullOrWhiteSpace(textBox3.Text))//textbox3.text boş veya sadece boşluk varsa
            {
                MessageBox.Show("Metini boş bırakamazsınız."); //hata mesajı
                return;
            }

            int sayimi;
            if (!int.TryParse(textBox1.Text, out sayimi))  //eğer textbox1.text e sayı harici birşey girilmeye çalışılırsa 
            {
                MessageBox.Show("A anahtarı sadece sayılardan oluşabilir."); //hata mesajı
                return;
            }

            if (!int.TryParse(textBox2.Text, out sayimi)) //eğer textbox2.text e sayı harici birşey girilmeye çalışılırsa 
            {
                MessageBox.Show("B anahtarı sadece sayılardan oluşabilir.");
                return;
            }
            // kontrol bölümü biter
            string[] alfabetr = new string[] //TÜRKÇE alfabe
                        { "A", "B", "C", "Ç", "D", "E", "F", "G", "Ğ", "H", "I", "İ", "J", "K", "L", "M", "N", "O", "Ö", "P", "R", "S", "Ş", "T", "U", "Ü", "V", "Y", "Z" };
            try
            {
                string sifrele = textBox3.Text;  //sifrele adlı string değişkenini textbox3'teki texte eşit tutttum.
                int a = int.Parse(textBox1.Text); //String türündeki değerleri sayı türündeki değerlere çevirmekte kullanılır.
                int b = int.Parse(textBox2.Text); //String türündeki değerleri sayı türündeki değerlere çevirmekte kullanılır.  int.parse
                int x = 0; //x adında int değeri 0 
                int terss=0;
                int blabla = 0;
                string tersmetin = ""; //sifrelimetin adında string değeri boş ""
                sifrele = sifrele.ToUpper(); //textbox3'e girilen değerleri büyük harf yap

                for (int i = 0; i < sifrele.Length; i++) //0'dan başlayıp girilen metinin uzunluğuna kadar 1'er arttır
                {
                    string sifrelenecek = sifrele.Substring(i, 1); //

                    //noktalama işaretlerini harfe çevirerek değer atıyorum burda
                    if (sifrelenecek == "?") sifrelenecek = "A"; if (sifrelenecek == "!") sifrelenecek = "B"; if (sifrelenecek == "'") sifrelenecek = "C";
                    if (sifrelenecek == ">") sifrelenecek = "Ç"; if (sifrelenecek == ".") sifrelenecek = "D"; if (sifrelenecek == ",") sifrelenecek = "E";
                    if (sifrelenecek == "|") sifrelenecek = "F"; if (sifrelenecek == "£") sifrelenecek = "G"; if (sifrelenecek == "$") sifrelenecek = "Ğ";
                    if (sifrelenecek == ";") sifrelenecek = "H"; if (sifrelenecek == "%") sifrelenecek = "I"; if (sifrelenecek == "&") sifrelenecek = "İ";
                    if (sifrelenecek == "/") sifrelenecek = "J"; if (sifrelenecek == "(") sifrelenecek = "K"; if (sifrelenecek == ")") sifrelenecek = "L";
                    if (sifrelenecek == "=") sifrelenecek = "M"; if (sifrelenecek == "_") sifrelenecek = "N"; if (sifrelenecek == "*") sifrelenecek = "O";
                    if (sifrelenecek == "^") sifrelenecek = "Ö"; if (sifrelenecek == "^^") sifrelenecek = "P"; if (sifrelenecek == "-") sifrelenecek = "R";
                    if (sifrelenecek == "<") sifrelenecek = "Ş"; if (sifrelenecek == "{") sifrelenecek = "T"; if (sifrelenecek == "}") sifrelenecek = "U";
                    if (sifrelenecek == "[") sifrelenecek = "Ü"; if (sifrelenecek == "]") sifrelenecek = "V";
                    if (sifrelenecek == "+") sifrelenecek = "Y";
                    // if (sifrelenecek == "\") sifrelenecek = "Y"; 
                    // if (sifrelenecek == "") sifrelenecek = "Z";
                    //değer atama bitişi...

                    for (int j = 0; j < alfabetr.Length; j++) //0'dan başlayarak dizinin uzunluğuna 1'er arttır.
                    //yani 0'dan 29 a kadar 1arttırıyor
                    {
                        if (sifrelenecek == alfabetr[j]) //eğer textbox3teki eleman alfabetr dizisinde varsa döngüden çık
                        { break; } // break komutu döngünün bu komutun görüldüğü yerde bitirilerek döngünün dışına çıkılması için kullanılır.
                        else
                        { x++; } //eleman eğer dizide yoksa dizideki yerini bulabilmek için 1'arttır.
                    }
                    if (sifrelenecek == " ") //eğer textbox3'teki metinde boşluk bırakılırsa
                    {
                        tersmetin += " "; //textbox3'e ekle ama boşluğu şifreleme  
                        x = 0; //dizideki yerini sıfırla   BİLİNMEYEN BİRŞEY GİRİLDİĞİNDE DİZİDEKİ YERİNİ 0 YANİ (A HARFİ) olarak kabul edicek 
                    }
                    else if (char.Parse(sifrelenecek) >= 48 && char.Parse(sifrelenecek) <= 57) //ASCİ TABLOSUNDA 48-57 ARALĞI = 0-9 ARALIĞI
                    {
                        //şifreleme döngüsüne sokmadan eklicek
                        tersmetin += sifrelenecek; //örnek ? işareti girildiğinde  şifreleme algoritmasana sokmadan yukarda tanımladığım ?  = A daki ? yerine A yı metine eklicek.
                        x = 0; //dizideki yerini sıfırla
                    }
                    else //şifreleme kısmı başlıyor affine algoritması
                    {
                        for (int modters = 1; modters < 29; modters++) //modüler ters alma işlemi 3^-1 mod 29
                        {
                            if ((a * modters) % 29 == 1) //kalan eğer 1'e eşitse o sayının modüler tersi modters değişkenindeki elemandır
                            {
                                terss = modters;
                                break; //döngünün bu komutun görüldüğü yerde bitirilerek döngünün dışına çıkılması için kullanılır.
                            }
                        }
                        if ( terss != 0) //modüler tersi varsa işleme devam et
                        {
                            if (x - b < 0) x += 29; //x-b sıfırdan küçük ise x'e 29 (mod 29 olduğu için) ekle
                            blabla = (terss * (x - b)) % 29; //y=a^-1*(x-b) formülüne göre modunu alarak şifre çöz
                            x = 0; //dizideki yerini sıfırla
                            tersmetin += alfabetr[blabla]; //ve dizideki yerini bul değişkene at
                        }
                        else if (terss == 0) //modüler tersi sıfıra eşitse mesaj ver ve döngüden çık
                        {
                            MessageBox.Show("a anahtarının modüler tersi olmadığı için çözme işlemi gerçekleştirilemiyor!\nBu yüzden a anahtarı tek sayı olmalıdır.", "Modüler Ters");
                            break;  //döngünün bu komutun görüldüğü yerde bitirilerek döngünün dışına çıkılması için kullanılır.
                        }
                    }
                }
                textBox5.Text = tersmetin; //oluşan şifreli metni yazdır
            }
            catch (Exception) //Olası bir hata durumunda
            {
                MessageBox.Show("Hatalı Veri Girişi");  //tanımlamadığım bir hata oluşması durumunda verilecek hata
            }
        }

        //DECOMPILE KISMI BİTER..
        //
        //
        //
        //
        //
        //



        private void LinkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) //linklabel1 e tıklanırsa ne olur
        {
            System.Diagnostics.Process.Start("http://www.instagram.com/orcunn_ozer");      //işlemi başlat link varsıyılan tarayıcıda linki açıyor (benim instagram adresim)
        }


       // private void Timer1_Tick(object sender, EventArgs e)
      //  {
        //    if (textBox3.Text == "0003291989") textBox4.Text = "Orçun Özer";    //rfid sistemi için bu sunumda yok
         //   else
          //      return;
     //   }

        private void LinkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)  //linklabel2'ye tıklanırsa
        {
            textBox1.Text = "";   //textboxları boş hale getir
            textBox2.Text = "";    //textboxları boş hale getir
            textBox3.Text = "";   //textboxları boş hale getir
            textBox4.Text = "";   //textboxları boş hale getir
            textBox5.Text = "";   //textboxları boş hale getir
        }
        private void TextBox1_TextChanged(object sender, EventArgs e)
        {
            int sayimi;  //sayimi adinda sayi değişkeni atıyorum
            if (!int.TryParse(textBox1.Text, out sayimi))  //eğer rakam dışı birşey textbox1'e yazılmaya çalışıyor ise textbox1'i boş kutu haline getir  text ""
            {
                textBox1.Text = "";  //textboxu boş hale getiriyor

            }
        }

        private void TextBox2_TextChanged(object sender, EventArgs e)
        {
            int sayimi;
            if (!int.TryParse(textBox2.Text, out sayimi))
            {
                textBox2.Text = "";
            }
        }



        private void Button3_Click(object sender, EventArgs e)
        {

        }
    }
}
